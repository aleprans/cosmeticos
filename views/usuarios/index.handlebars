{{>navbar}}
<form action="" method="post" id="user">
  <div class="right-login">    
    <div class="card-login">
      <h1>Cadastro de Usuários</h1>
        <div class="msg" id="msg"><p id="msgtext"></p></div>
      <div class="line">
        <div class="textfield">
          <label for="nome">Nome</label>
          <input type="text" name="nome" id="nome" placeholder="Ex: João Oliveira" required/>
        </div>
        <div class="textfield">
          <label for="usuario">Nome de Usuário</label>
          <input type="text" name="usuario" id="usuario" placeholder="Ex: JOliver | minimo 5 caracteres" required/>
        </div>
      </div>
      <div class="line">
        <div class="textfield">
          <label for="cpf">CPF</label>
          <input type="text" name="cpf" id="cpf" placeholder="Ex: 123.456.789-00" required/>
        </div>
        <div class="textfield">
          <label for="email">Email</label>
          <input type="email" name="email" id="email" placeholder="Ex: email@email.com.br" required/>
        </div>
      </div>
      <div class="line">
        <div class="textfield">
          <label for="senha">Senha</label>
          <input type="password" name="senha" id="senha" placeholder="Minino de 6 digitos."required/>
        </div>
        <div class="textfield">
          <label for="conf">Confirmação de senha</label>
          <input type="password" name="conf" id="conf" placeholder="Confirme a senha!" required/>
        </div>
      </div>
      <button class="btn-salvar" id="btnSalvar">Salvar</button>
    </div>
  </div>
</form>

<style>
  .msg {
      position:absolute; 
      display: flex;
      width: 30vw;
      height: 10vh;
      background: #dd2222;
      bottom: 10vh;
      left: 32px;;
      border-radius: 8px;
      padding: 10px;
      color: #f0ffffde;
      justify-content: center;
      align-items: center;
      visibility: hidden;
  }

  .msg p {
  text-align: center;
  } 

  .right-login {
    width:100vw;
    height: 92vh;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  
  .card-login {
    width: 90%;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    padding: 30px 35px;
    background: #2f2841;
    border-radius: 20px;
    box-shadow: 0px 10px 40px #000;
    margin: 0;
  }

  .card-login > h1 {
    color: #ff35a4;
    font-weight: 800;
    margin: 0 0 50px 0;
  }

  .line {
    display: flex;
    width: 100%;
    flex-direction: row;

  }

  .textfield {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;
    margin: 10px;
  }

  .textfield > input {
    width: 100%;
    border: none;
    border-radius: 10px;
    padding: 15px;
    background: #514869;
    color: #f0ffffde;
    font-size: 12pt;
    box-shadow:  0px 10px 40px #00000056;
    outline: none;
    box-sizing: border-box;
  }

  .textfield > label {
    color: #f0ffffde;
    margin-bottom: 10px;
  }

  .textfield > input::placeholder {
    color: #f0ffff94;
  }

  .btn-salvar {
    width: 100%;
    padding: 16px 0px;
    margin: 25px;
    border: none;
    border-radius: 8px;
    outline: none;
    text-transform: uppercase;
    font-weight: 800;
    letter-spacing: 3px;
    color: #2b134b;
    background: #ff35a4;
    cursor: pointer;
    box-shadow: 0px 10px 40px -12px #f05dad52;
    
  }

</style>

<script>
  var erro = 0

  $(document).ready(() => {
    $('#user').submit((e)=> {
      e.preventDefault()
    })
  })

  $('#btnSalvar').click(function() {
    if(erro) {
      $('#user').off('submit').submit()
    }
  })

  $('#cpf').blur(function() {
    if($(this).val().length != 14 || validarCPF($(this).val()) === false){
      msgAlert('CPF inválido!', 'erro')
      erro = 1
    }else {
      erro = 0
    }
  })

  $('#nome').blur(function() {
    if($(this).val().length < 5) {
      msgAlert('Nome inválido! <br> Minimo 5 caracteres', 'erro')
      erro = 1
    }else {
      erro = 0
    }
  })



  function validarCPF(strCpf) {
  strCpf = strCpf.replace(/[^0-9]/g,'')
  let soma;
  let resto;
  soma = 0;
  const cpf_falso = [
      "00000000000",
      "11111111111",
      "22222222222",
      "33333333333",
      "44444444444",
      "55555555555",
      "66666666666",
      "77777777777",
      "88888888888",
      "99999999999"
  ]

  let verificado = cpf_falso.indexOf(strCpf)

  if (verificado > 0) {
      return false;
  }
  
  for (i = 1; i <= 9; i++) {
      soma = soma + parseInt(strCpf.substring(i - 1, i)) * (11 - i);
  }
  
  resto = soma % 11;
  
  if (resto == 10 || resto == 11 || resto < 2) {
      resto = 0;
  } else {
      resto = 11 - resto;
  }
  
  if (resto != parseInt(strCpf.substring(9, 10))) {
      return false;
  }
  
  soma = 0;
  
  for (i = 1; i <= 10; i++) {
      soma = soma + parseInt(strCpf.substring(i - 1, i)) * (12 - i);
  }
  resto = soma % 11;
  
  if (resto == 10 || resto == 11 || resto < 2) {
      resto = 0;
  } else {
      resto = 11 - resto;
  }
  
  if (resto != parseInt(strCpf.substring(10, 11))) {
      return false;
  }
  
  return true;
}

</script>